{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "cloudresourcemanager:v1beta1",
  "name": "cloudresourcemanager",
  "version": "v1beta1",
  "revision": "0",
  "title": "Google Cloud Resource Manager API",
  "description": "The Google Cloud Resource Manager API provides methods for creating, reading, and updating of project metadata.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/resource-manager",
  "protocol": "rest",
  "rootUrl": "https://cloudresourcemanager.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://cloudresourcemanager.googleapis.com/",
  "batchPath": "batch",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "bearer_token": {
      "type": "string",
      "description": "OAuth bearer token.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "pp": {
      "type": "boolean",
      "description": "Pretty-print response.",
      "default": "true",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "Project": {
      "id": "Project",
      "description": "A Project is a high-level Google Cloud Platform entity.  It is a\ncontainer for ACLs, APIs, AppEngine Apps, VMs, and other\nGoogle Cloud Platform resources.",
      "type": "object",
      "properties": {
        "projectNumber": {
          "description": "The number uniquely identifying the project.\n\nExample: <code>415104041262<\/code>\n\nRead-only.",
          "type": "string",
          "format": "int64"
        },
        "projectId": {
          "description": "The unique, user-assigned ID of the project.\nIt must be 6 to 30 lowercase letters, digits, or hyphens.\nIt must start with a letter.\nTrailing hyphens are prohibited.\n\nExample: <code>tokyo-rain-123<\/code>\n\nRead-only after creation.",
          "type": "string"
        },
        "lifecycleState": {
          "description": "The project lifecycle state.\n\nRead-only.",
          "enumDescriptions": [
            "Unspecified state.  This is only used\/useful for distinguishing\nunset values.",
            "The normal and active state.",
            "The project has been marked for deletion by the user\n(by invoking DeleteProject)\nor by the system (Google Cloud Platform).\nThis can generally be reversed by invoking UndeleteProject.",
            "The process of deleting the project has begun.  Reversing the deletion\nis no longer possible."
          ],
          "type": "string",
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETE_REQUESTED",
            "DELETE_IN_PROGRESS"
          ]
        },
        "name": {
          "description": "The user-assigned name of the project.\nIt must be 4 to 30 characters.\nAllowed characters are: lowercase and uppercase letters, numbers,\nhyphen, single-quote, double-quote, space, and exclamation point.\n\nExample: <code>My Project<\/code>\n\nRead-write.",
          "type": "string"
        },
        "createTime": {
          "description": "Creation time.\n\nRead-only.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "The labels associated with this project.\n\nLabel keys must be between 1 and 63 characters long and must conform\nto the following regular expression: \\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?.\n\nLabel values must be between 0 and 63 characters long and must conform\nto the regular expression (\\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?)?.\n\nNo more than 256 labels can be associated with a given resource.\n\nClients should store labels in a representation such as JSON that does not\ndepend on specific characters being disallowed.\n\nExample: <code>\"environment\" : \"dev\"<\/code>\n\nRead-write.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "parent": {
          "description": "An optional reference to a parent Resource.\n\nThe only supported parent type is \"organization\". Once set, the parent\ncannot be modified.\n\nRead-write.",
          "$ref": "ResourceId"
        }
      }
    },
    "ResourceId": {
      "id": "ResourceId",
      "description": "A container to reference an id for any resource type. A 'resource' in Google\nCloud Platform is a generic term for something you (a developer) may want to\ninteract with through one of our API's. Some examples are an AppEngine app,\na Compute Engine instance, Cloud SQL database, ...",
      "type": "object",
      "properties": {
        "type": {
          "description": "Required field representing the resource type this id is for.\nAt present, the only valid type is \"organization\".",
          "type": "string"
        },
        "id": {
          "description": "Required field for the type-specific id. This should correspond to the id\nused in the type-specific API's.",
          "type": "string"
        }
      }
    },
    "ListProjectsResponse": {
      "id": "ListProjectsResponse",
      "description": "A page of the response received from the\nListProjects\nmethod.\n\nA paginated response where more pages are available has\n`next_page_token` set. This token can be used in a subsequent request to\nretrieve the next request page.",
      "type": "object",
      "properties": {
        "projects": {
          "description": "The list of projects that matched the list filter. This list can\nbe paginated.",
          "type": "array",
          "items": {
            "$ref": "Project"
          }
        },
        "nextPageToken": {
          "description": "Pagination token.\n\nIf the result set is too large to fit in a single response, this token\nis returned. It encodes the position of the current result cursor.\nFeeding this value into a new list request with the `page_token` parameter\ngives the next page of the results.\n\nWhen `next_page_token` is not filled in, there is no next page and\nthe list returned is the last page in the result set.\n\nPagination tokens have a limited lifetime.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "GetIamPolicyRequest": {
      "id": "GetIamPolicyRequest",
      "description": "Request message for `GetIamPolicy` method.",
      "type": "object",
      "properties": {
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` consists of a list of `bindings`. A `Binding` binds a list of\n`members` to a `role`, where the members can be user accounts, Google groups,\nGoogle domains, and service accounts. A `role` is a named list of permissions\ndefined by IAM.\n\n**Example**\n\n    {\n        \"bindings\": [\n         {\n             \"role\": \"roles\/owner\",\n             \"members\": [\n             \"user:mike@example.com\",\n             \"group:admins@example.com\",\n             \"domain:google.com\",\n             \"serviceAccount:my-other-app@appspot.gserviceaccount.com\"]\n         },\n         {\n             \"role\": \"roles\/viewer\",\n             \"members\": [\"user:sean@example.com\"]\n         }\n         ]\n    }\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https:\/\/cloud.google.com\/iam).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Version of the `Policy`. The default version is 0.\n0 = resourcemanager_projects only support legacy roles.\n1 = supports non-legacy roles\n2 = supports AuditConfig",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`.\nMultiple `bindings` must not be specified for the same `role`.\n`bindings` with no members will result in an error.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "etag": {
          "description": "The etag is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the etag in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: Etags are returned in the response to GetIamPolicy, and\nsystems are expected to put that etag in the request to SetIamPolicy to\nensure that their change will be applied to the same version of the policy.\n\nIf no etag is provided in the call to SetIamPolicy, then the existing policy\nis overwritten blindly.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.\nRequired",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following formats:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@gmail.com` or `joe@example.com`.\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `domain:{domain}`: A Google Apps domain name that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "Policy"
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListOrganizationsResponse": {
      "id": "ListOrganizationsResponse",
      "description": "The response returned from the ListOrganizations method.",
      "type": "object",
      "properties": {
        "organizations": {
          "description": "The list of Organizations that matched the list query, possibly paginated.",
          "type": "array",
          "items": {
            "$ref": "Organization"
          }
        },
        "nextPageToken": {
          "description": "A pagination token to be used to retrieve the next page of results. If the\nresult is too large to fit within the page size specified in the request,\nthis field will be set with a token that can be used to fetch the next page\nof results. If this field is empty, it indicates that this response\ncontains the last page of results.",
          "type": "string"
        }
      }
    },
    "Organization": {
      "id": "Organization",
      "description": "The root node in the resource hierarchy to which a particular entity's\n(e.g., company) resources belong.",
      "type": "object",
      "properties": {
        "organizationId": {
          "description": "An immutable id for the Organization that is assigned on creation. This\nshould be omitted when creating a new Organization.\nThis field is read-only.",
          "type": "string"
        },
        "displayName": {
          "description": "A friendly string to be used to refer to the Organization in the UI.\nThis field is required.",
          "type": "string"
        },
        "owner": {
          "description": "The owner of this Organization. The owner should be specified upon\ncreation. Once set, it cannot be changed.\nThis field is required.",
          "$ref": "OrganizationOwner"
        },
        "creationTime": {
          "description": "Timestamp when the Organization was created. Assigned by the server.\n@OutputOnly",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "OrganizationOwner": {
      "id": "OrganizationOwner",
      "description": "The entity that owns an Organization. The lifetime of the Organization and\nall of its descendants are bound to the OrganizationOwner. If the\nOrganizationOwner is deleted, the Organization and all its descendants will\nbe deleted.",
      "type": "object",
      "properties": {
        "directoryCustomerId": {
          "description": "The Google for Work customer id used in the Directory API.",
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "methods": {
        "create": {
          "id": "cloudresourcemanager.projects.create",
          "path": "v1beta1/projects",
          "flatPath": "v1beta1/projects",
          "httpMethod": "POST",
          "description": "Creates a project resource.\n\nInitially, the project resource is owned by its creator exclusively.\nThe creator can later grant permission to others to read or update the\nproject.\n\nSeveral APIs are activated automatically for the project, including\nGoogle Cloud Storage.",
          "parameters": {
          },
          "parameterOrder": [
          ],
          "request": {
            "$ref": "Project"
          },
          "response": {
            "$ref": "Project"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "list": {
          "id": "cloudresourcemanager.projects.list",
          "path": "v1beta1/projects",
          "flatPath": "v1beta1/projects",
          "httpMethod": "GET",
          "description": "Lists projects that are visible to the user and satisfy the\nspecified filter. This method returns projects in an unspecified order.\nNew projects do not necessarily appear at the end of the list.",
          "parameters": {
            "pageToken": {
              "description": "A pagination token returned from a previous call to ListProject\nthat indicates from where listing should continue.\n\nOptional.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "description": "The maximum number of Projects to return in the response.\nThe server can return fewer projects than requested.\nIf unspecified, server picks an appropriate default.\n\nOptional.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "filter": {
              "description": "An expression for filtering the results of the request.  Filter rules are\ncase insensitive. The fields eligible for filtering are:\n\n+ `name`\n+ `id`\n+ <code>labels.<em>key<\/em><\/code> where *key* is the name of a label\n\nSome examples of using labels as filters:\n\n|Filter|Description|\n|------|-----------|\n|name:*|The project has a name.|\n|name:Howl|The project's name is `Howl` or `howl`.|\n|name:HOWL|Equivalent to above.|\n|NAME:howl|Equivalent to above.|\n|labels.color:*|The project has the label `color`.|\n|labels.color:red|The project's label `color` has the value `red`.|\n|labels.color:red&nbsp;label.size:big|The project's label `color` has the value `red` and its label `size` has the value `big`.\n\nOptional.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
          ],
          "response": {
            "$ref": "ListProjectsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ]
        },
        "get": {
          "id": "cloudresourcemanager.projects.get",
          "path": "v1beta1/projects/{projectId}",
          "flatPath": "v1beta1/projects/{projectId}",
          "httpMethod": "GET",
          "description": "Retrieves the project identified by the specified\n`project_id` (for example, `my-project-123`).\n\nThe caller must have read permissions for this project.",
          "parameters": {
            "projectId": {
              "description": "The project ID (for example, `my-project-123`).\n\nRequired.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "projectId"
          ],
          "response": {
            "$ref": "Project"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ]
        },
        "update": {
          "id": "cloudresourcemanager.projects.update",
          "path": "v1beta1/projects/{projectId}",
          "flatPath": "v1beta1/projects/{projectId}",
          "httpMethod": "PUT",
          "description": "Updates the attributes of the project identified by the specified\n`project_id` (for example, `my-project-123`).\n\nThe caller must have modify permissions for this project.",
          "parameters": {
            "projectId": {
              "description": "The project ID (for example, `my-project-123`).\n\nRequired.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "projectId"
          ],
          "request": {
            "$ref": "Project"
          },
          "response": {
            "$ref": "Project"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "delete": {
          "id": "cloudresourcemanager.projects.delete",
          "path": "v1beta1/projects/{projectId}",
          "flatPath": "v1beta1/projects/{projectId}",
          "httpMethod": "DELETE",
          "description": "Marks the project identified by the specified\n`project_id` (for example, `my-project-123`) for deletion.\nThis method will only affect the project if the following criteria are met:\n\n+ The project does not have a billing account associated with it.\n+ The project has a lifecycle state of\nACTIVE.\n\nThis method changes the project's lifecycle state from\nACTIVE\nto DELETE_REQUESTED.\nThe deletion starts at an unspecified time,\nat which point the lifecycle state changes to DELETE_IN_PROGRESS.\n\nUntil the deletion completes, you can check the lifecycle state\nchecked by retrieving the project with GetProject,\nand the project remains visible to ListProjects.\nHowever, you cannot update the project.\n\nAfter the deletion completes, the project is not retrievable by\nthe  GetProject and\nListProjects methods.\n\nThe caller must have modify permissions for this project.",
          "parameters": {
            "projectId": {
              "description": "The project ID (for example, `foo-bar-123`).\n\nRequired.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "projectId"
          ],
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "undelete": {
          "id": "cloudresourcemanager.projects.undelete",
          "path": "v1beta1/projects/{projectId}:undelete",
          "flatPath": "v1beta1/projects/{projectId}:undelete",
          "httpMethod": "POST",
          "description": "Restores the project identified by the specified\n`project_id` (for example, `my-project-123`).\nYou can only use this method for a project that has a lifecycle state of\nDELETE_REQUESTED.\nAfter deletion starts, as indicated by a lifecycle state of\nDELETE_IN_PROGRESS,\nthe project cannot be restored.\n\nThe caller must have modify permissions for this project.",
          "parameters": {
            "projectId": {
              "description": "The project ID (for example, `foo-bar-123`).\n\nRequired.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "projectId"
          ],
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "getIamPolicy": {
          "id": "cloudresourcemanager.projects.getIamPolicy",
          "path": "v1beta1/projects/{resource}:getIamPolicy",
          "flatPath": "v1beta1/projects/{resource}:getIamPolicy",
          "httpMethod": "POST",
          "description": "Returns the IAM access control policy for specified project.",
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which policy is being requested.\n`resource` is usually specified as a path, such as,\n`projects\/{project}\/zones\/{zone}\/disks\/{disk}`.\n\nThe format for the path specified in this value is resource specific and\nis specified in the documentation for the respective GetIamPolicy rpc.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "resource"
          ],
          "request": {
            "$ref": "GetIamPolicyRequest"
          },
          "response": {
            "$ref": "Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ]
        },
        "setIamPolicy": {
          "id": "cloudresourcemanager.projects.setIamPolicy",
          "path": "v1beta1/projects/{resource}:setIamPolicy",
          "flatPath": "v1beta1/projects/{resource}:setIamPolicy",
          "httpMethod": "POST",
          "description": "Sets the IAM access control policy for the specified project. We do not\ncurrently support 'domain:' prefixed members in a Binding of a Policy.\n\nCalling this method requires enabling the App Engine Admin API.",
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which policy is being specified.\n`resource` is usually specified as a path, such as,\n`projects\/{project}\/zones\/{zone}\/disks\/{disk}`.\n\nThe format for the path specified in this value is resource specific and\nis specified in the documentation for the respective SetIamPolicy rpc.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "resource"
          ],
          "request": {
            "$ref": "SetIamPolicyRequest"
          },
          "response": {
            "$ref": "Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "testIamPermissions": {
          "id": "cloudresourcemanager.projects.testIamPermissions",
          "path": "v1beta1/projects/{resource}:testIamPermissions",
          "flatPath": "v1beta1/projects/{resource}:testIamPermissions",
          "httpMethod": "POST",
          "description": "Tests the specified permissions against the IAM access control policy\nfor the specified project.",
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which policy detail is being requested.\n`resource` is usually specified as a path, such as,\n`projects\/{project}\/zones\/{zone}\/disks\/{disk}`.\n\nThe format for the path specified in this value is resource specific and\nis specified in the documentation for the respective TestIamPermissions\nrpc.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "resource"
          ],
          "request": {
            "$ref": "TestIamPermissionsRequest"
          },
          "response": {
            "$ref": "TestIamPermissionsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ]
        }
      }
    },
    "organizations": {
      "methods": {
        "list": {
          "id": "cloudresourcemanager.organizations.list",
          "path": "v1beta1/organizations",
          "flatPath": "v1beta1/organizations",
          "httpMethod": "GET",
          "description": "Query Organization resources.",
          "parameters": {
            "pageSize": {
              "description": "The maximum number of Organizations to return in the response.\nThis field is optional.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "A pagination token returned from a previous call to ListOrganizations that\nindicates from where listing should continue.\nThis field is optional.",
              "location": "query",
              "type": "string"
            },
            "filter": {
              "description": "An optional query string used to filter the Organizations to be return in\nthe response. Filter rules are case-insensitive.\n\n\nOrganizations may be filtered by `owner.directoryCustomerId` or by\n`domain`, where the domain is a Google for Work domain, for example:\n\n|Filter|Description|\n|------|-----------|\n|owner.directorycustomerid:123456789|Organizations with `owner.directory_customer_id` equal to `123456789`.|\n|domain:google.com|Organizations corresponding to the domain `google.com`.|\n\nThis field is optional.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
          ],
          "response": {
            "$ref": "ListOrganizationsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ]
        },
        "get": {
          "id": "cloudresourcemanager.organizations.get",
          "path": "v1beta1/organizations/{organizationId}",
          "flatPath": "v1beta1/organizations/{organizationId}",
          "httpMethod": "GET",
          "description": "Fetches an Organization resource by id.",
          "parameters": {
            "organizationId": {
              "description": "The id of the Organization resource to fetch.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "organizationId"
          ],
          "response": {
            "$ref": "Organization"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ]
        },
        "update": {
          "id": "cloudresourcemanager.organizations.update",
          "path": "v1beta1/organizations/{organizationId}",
          "flatPath": "v1beta1/organizations/{organizationId}",
          "httpMethod": "PUT",
          "description": "Updates an Organization resource.",
          "parameters": {
            "organizationId": {
              "description": "An immutable id for the Organization that is assigned on creation. This\nshould be omitted when creating a new Organization.\nThis field is read-only.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "organizationId"
          ],
          "request": {
            "$ref": "Organization"
          },
          "response": {
            "$ref": "Organization"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "setIamPolicy": {
          "id": "cloudresourcemanager.organizations.setIamPolicy",
          "path": "v1beta1/organizations/{resource}:setIamPolicy",
          "flatPath": "v1beta1/organizations/{resource}:setIamPolicy",
          "httpMethod": "POST",
          "description": "Sets the access control policy on a Organization resource. Replaces any\nexisting policy.",
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which policy is being specified.\n`resource` is usually specified as a path, such as,\n`projects\/{project}\/zones\/{zone}\/disks\/{disk}`.\n\nThe format for the path specified in this value is resource specific and\nis specified in the documentation for the respective SetIamPolicy rpc.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "resource"
          ],
          "request": {
            "$ref": "SetIamPolicyRequest"
          },
          "response": {
            "$ref": "Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "getIamPolicy": {
          "id": "cloudresourcemanager.organizations.getIamPolicy",
          "path": "v1beta1/organizations/{resource}:getIamPolicy",
          "flatPath": "v1beta1/organizations/{resource}:getIamPolicy",
          "httpMethod": "POST",
          "description": "Gets the access control policy for a Organization resource. May be empty if\nno such policy or resource exists.",
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which policy is being requested.\n`resource` is usually specified as a path, such as,\n`projects\/{project}\/zones\/{zone}\/disks\/{disk}`.\n\nThe format for the path specified in this value is resource specific and\nis specified in the documentation for the respective GetIamPolicy rpc.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "resource"
          ],
          "request": {
            "$ref": "GetIamPolicyRequest"
          },
          "response": {
            "$ref": "Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ]
        },
        "testIamPermissions": {
          "id": "cloudresourcemanager.organizations.testIamPermissions",
          "path": "v1beta1/organizations/{resource}:testIamPermissions",
          "flatPath": "v1beta1/organizations/{resource}:testIamPermissions",
          "httpMethod": "POST",
          "description": "Returns permissions that a caller has on the specified Organization.",
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which policy detail is being requested.\n`resource` is usually specified as a path, such as,\n`projects\/{project}\/zones\/{zone}\/disks\/{disk}`.\n\nThe format for the path specified in this value is resource specific and\nis specified in the documentation for the respective TestIamPermissions\nrpc.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "resource"
          ],
          "request": {
            "$ref": "TestIamPermissionsRequest"
          },
          "response": {
            "$ref": "TestIamPermissionsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ]
        }
      }
    }
  },
  "basePath": ""
}