{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "cloudfunctions:v1beta1",
  "name": "cloudfunctions",
  "version": "v1beta1",
  "revision": "0",
  "title": "Google Cloud Functions API",
  "description": "API for managing lightweight user-provided functions executed in response to events.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/functions",
  "protocol": "rest",
  "rootUrl": "https://cloudfunctions.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://cloudfunctions.googleapis.com/",
  "batchPath": "batch",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "bearer_token": {
      "type": "string",
      "description": "OAuth bearer token.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "pp": {
      "type": "boolean",
      "description": "Pretty-print response.",
      "default": "true",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListFunctionsResponse": {
      "id": "ListFunctionsResponse",
      "description": "Response for the ListFunctions method.",
      "type": "object",
      "properties": {
        "functions": {
          "description": "The functions that match the request.",
          "type": "array",
          "items": {
            "$ref": "HostedFunction"
          }
        },
        "nextPageToken": {
          "description": "If not empty, indicates that there may be more functions that match\nthe request; this value should be passed in a new ListFunctionsRequest\nto get more functions.",
          "type": "string"
        }
      }
    },
    "HostedFunction": {
      "id": "HostedFunction",
      "description": "Describes a cloud function that contains user computation executed in\nresponse to an event. It encapsulate function and triggers configurations.",
      "type": "object",
      "properties": {
        "name": {
          "description": "A user-defined name of the function. Function names must be unique\nglobally and match pattern: projects\/*\/regions\/*\/functions\/*",
          "type": "string"
        },
        "gcsUrl": {
          "description": "GCS URL pointing to the zip archive which contains the function.",
          "type": "string"
        },
        "sourceRepository": {
          "description": "The hosted repository where the function is defined.",
          "$ref": "SourceRepository"
        },
        "triggers": {
          "description": "List of triggers.",
          "type": "array",
          "items": {
            "$ref": "FunctionTrigger"
          }
        },
        "status": {
          "description": "[Output only] Status of the function deployment.",
          "enumDescriptions": [
            "Status not specified.",
            "Successfully deployed.",
            "Not deployed correctly - behavior is undefined. The item should be updated\nor deleted to move it out of this state.",
            "Creation or update in progress.",
            "Deletion in progress."
          ],
          "type": "string",
          "enum": [
            "STATUS_UNSPECIFIED",
            "READY",
            "FAILED",
            "DEPLOYING",
            "DELETING"
          ]
        },
        "latestOperation": {
          "description": "[Output only] Name of the most recent operation modifying the function. If\nthe function status is DEPLOYING or DELETING, then it points to the active\noperation.",
          "type": "string"
        },
        "entryPoint": {
          "description": "The name of the function (as defined in source code) that will be\nexecuted. Defaults to the resource name suffix, if not specified. For\nbackward compatibility, if function with given name is not found, then the\nsystem will try to use function named 'function'.\nFor Node.js this is name of a function exported by the module specified\nin source_location.",
          "type": "string"
        },
        "timeout": {
          "description": "The cloud function execution timeout. Execution is considered failed and\ncan be terminated if the function is not completed at the end of the\ntimeout period. Defaults to 60 seconds.",
          "type": "string",
          "format": "google-duration"
        },
        "oauthScopes": {
          "description": "The set of Google API scopes to be made available to the function while\nit is being executed. Values should be in the format of scope\ndeveloper codes, for example: \"https:\/\/www.googleapis.com\/auth\/compute\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SourceRepository": {
      "id": "SourceRepository",
      "description": "Describes the location of the function source in a remote repository.",
      "type": "object",
      "properties": {
        "repositoryUrl": {
          "description": "URL to the hosted repository where the function is defined. Only paths in\nhttps:\/\/source.developers.google.com domain are supported. The path should\ncontain the name of the repository.",
          "type": "string"
        },
        "sourcePath": {
          "description": "The path within the repository where the function is defined. The path\nshould point to the directory where cloud functions files are located. Use\n'\/' if the function is defined directly in the root directory of a\nrepository.",
          "type": "string"
        },
        "branch": {
          "description": "The name of the branch from which the function should be fetched.",
          "type": "string"
        },
        "tag": {
          "description": "The name of the tag that captures the state of the repository from\nwhich the function should be fetched.",
          "type": "string"
        },
        "revision": {
          "description": "The id of the revision that captures the state of the repository from\nwhich the function should be fetched.",
          "type": "string"
        },
        "deployedRevision": {
          "description": "[Output only] The id of the revision that was resolved at the moment of\nfunction creation or update. For example when a user deployed from a\nbranch, it will be the revision id of the latest change on this branch at\nthat time. If user deployed from revision then this value will be always\nequal to the revision specified by the user.",
          "type": "string"
        }
      }
    },
    "FunctionTrigger": {
      "id": "FunctionTrigger",
      "description": "Describes binding of computation to the event source.",
      "type": "object",
      "properties": {
        "pubsubTopic": {
          "description": "A pub\/sub type of source.",
          "type": "string"
        },
        "gsUri": {
          "description": "Google Cloud Storage resource whose changes trigger the events.\nCurrently, it must have the form gs:\/\/<bucket>\/ (that is, it must refer\nto a bucket, rather than an object).",
          "type": "string"
        },
        "webTrigger": {
          "description": "A web endpoint (e.g. HTTP) type of source that can be trigger via URL.",
          "$ref": "WebTrigger"
        }
      }
    },
    "WebTrigger": {
      "id": "WebTrigger",
      "description": "Describes WebTrigger, could be used to connect web hooks to function.",
      "type": "object",
      "properties": {
        "protocol": {
          "description": "Protocol accepted by WebTrigger.",
          "enumDescriptions": [
            "HTTP protocol"
          ],
          "type": "string",
          "enum": [
            "HTTP"
          ]
        },
        "url": {
          "description": "[Output only] The deployed url for the function.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations\/some\/unique\/name`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf true, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`\/`Create`\/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https:\/\/github.com\/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` which can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting purpose.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security\/privacy reasons.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There will be a\ncommon set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "CallFunctionRequest": {
      "id": "CallFunctionRequest",
      "description": "Request for the CallFunction method.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Input to be passed to the function.",
          "type": "string"
        }
      }
    },
    "CallFunctionResponse": {
      "id": "CallFunctionResponse",
      "description": "Response of CallFunction method.",
      "type": "object",
      "properties": {
        "executionId": {
          "description": "Execution id of function invocation.",
          "type": "string"
        },
        "result": {
          "description": "Result populated for successful execution of synchronous function. Will\nnot be populated if function does not return a result through context.",
          "type": "string"
        },
        "error": {
          "description": "Either system or user-function generated error. Set if execution\nwas not successful.",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for LocationService.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Metadata describing an Operation",
      "type": "object",
      "properties": {
        "target": {
          "description": "Target of the operation - for example\nprojects\/project-1\/regions\/region-1\/functions\/function-1",
          "type": "string"
        },
        "type": {
          "description": "Type of operation.",
          "enumDescriptions": [
            "Unknown operation type.",
            "Triggered by CreateFunction call",
            "Triggered by UpdateFunction call",
            "Triggered by DeleteFunction call."
          ],
          "type": "string",
          "enum": [
            "OPERATION_UNSPECIFIED",
            "CREATE_FUNCTION",
            "UPDATE_FUNCTION",
            "DELETE_FUNCTION"
          ]
        },
        "request": {
          "description": "The original request that started the operation.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "regions": {
          "resources": {
            "functions": {
              "methods": {
                "list": {
                  "id": "cloudfunctions.projects.regions.functions.list",
                  "path": "v1beta1/{+location}/functions",
                  "flatPath": "v1beta1/projects/{projectsId}/regions/{regionsId}/functions",
                  "httpMethod": "GET",
                  "description": "Returns a list of all functions that belong to the requested project.",
                  "parameters": {
                    "location": {
                      "description": "The project and region from which functions should be listed, specified\nin the format: projects\/*\/regions\/*",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]*\/regions\/[^\/]*$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of functions to return.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last ListFunctionsResponse; indicates that\nthis is a continuation of a prior ListFunctions call, and that the\nsystem should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "location"
                  ],
                  "response": {
                    "$ref": "ListFunctionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "id": "cloudfunctions.projects.regions.functions.get",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/regions/{regionsId}/functions/{functionsId}",
                  "httpMethod": "GET",
                  "description": "Returns a function with the given name from the requested project.",
                  "parameters": {
                    "name": {
                      "description": "The name of the function which details should be obtained.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]*\/regions\/[^\/]*\/functions\/[^\/]*$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "HostedFunction"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "id": "cloudfunctions.projects.regions.functions.create",
                  "path": "v1beta1/{+location}/functions",
                  "flatPath": "v1beta1/projects/{projectsId}/regions/{regionsId}/functions",
                  "httpMethod": "POST",
                  "description": "Creates a new function. If a function with the given name already exists in\nthe specified project, it will return ALREADY_EXISTS error.",
                  "parameters": {
                    "location": {
                      "description": "The project and region in which the function should be created, specified\nin the format: projects\/*\/regions\/*",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]*\/regions\/[^\/]*$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "location"
                  ],
                  "request": {
                    "$ref": "HostedFunction"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "update": {
                  "id": "cloudfunctions.projects.regions.functions.update",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/regions/{regionsId}/functions/{functionsId}",
                  "httpMethod": "PUT",
                  "description": "Updates existing function.",
                  "parameters": {
                    "name": {
                      "description": "The name of the function to be updated.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]*\/regions\/[^\/]*\/functions\/[^\/]*$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "HostedFunction"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "id": "cloudfunctions.projects.regions.functions.delete",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/regions/{regionsId}/functions/{functionsId}",
                  "httpMethod": "DELETE",
                  "description": "Deletes a function with the given name from the specified project. If the\ngiven function is used by some trigger, the trigger will be updated to\nremove this function.",
                  "parameters": {
                    "name": {
                      "description": "The name of the function which should be deleted.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]*\/regions\/[^\/]*\/functions\/[^\/]*$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "call": {
                  "id": "cloudfunctions.projects.regions.functions.call",
                  "path": "v1beta1/{+name}:call",
                  "flatPath": "v1beta1/projects/{projectsId}/regions/{regionsId}/functions/{functionsId}:call",
                  "httpMethod": "POST",
                  "description": "Invokes synchronously deployed function. To be used for testing, very\nlimited traffic allowed.",
                  "parameters": {
                    "name": {
                      "description": "The name of the function to be called.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]*\/regions\/[^\/]*\/functions\/[^\/]*$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CallFunctionRequest"
                  },
                  "response": {
                    "$ref": "CallFunctionResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        },
        "locations": {
          "methods": {
            "list": {
              "id": "cloudfunctions.projects.locations.list",
              "path": "v1beta1/{+name}/locations",
              "flatPath": "v1beta1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "description": "Lists information about the supported locations for this service.",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]*$",
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "id": "cloudfunctions.operations.get",
          "path": "v1beta1/{+name}",
          "flatPath": "v1beta1/operations/{operationsId}",
          "httpMethod": "GET",
          "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "location": "path",
              "required": true,
              "pattern": "^operations\/[^\/]*$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        }
      }
    }
  },
  "basePath": ""
}